{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { verifyLicense } from \"../verifyLicense/verifyLicense.js\";\nimport { LicenseInfo } from \"../utils/licenseInfo.js\";\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError, showNotAvailableInInitialProPlanError } from \"../utils/licenseErrorMessageUtils.js\";\nimport { LICENSE_STATUS } from \"../utils/licenseStatus.js\";\nimport MuiLicenseInfoContext from \"../Unstable_LicenseInfoProvider/MuiLicenseInfoContext.js\";\nexport const sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  const {\n    key: contextKey\n  } = React.useContext(MuiLicenseInfoContext);\n  return React.useMemo(() => {\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey();\n\n    // Cache the response to not trigger the error twice.\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].licenseVerifier;\n    }\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      packageName\n    });\n    const fullPackageName = `@mui/${packageName}`;\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {\n      // Skip\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\n      showInvalidLicenseKeyError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotAvailableInInitialProPlan) {\n      showNotAvailableInInitialProPlanError();\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\n      showLicenseKeyPlanMismatchError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\n      showMissingLicenseKeyError({\n        plan,\n        packageName: fullPackageName\n      });\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\n      showExpiredAnnualGraceLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\n      showExpiredAnnualLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\n      showExpiredPackageVersionError({\n        packageName: fullPackageName\n      });\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('missing status handler');\n    }\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      licenseVerifier: licenseStatus\n    };\n    return licenseStatus;\n  }, [packageName, releaseInfo, contextKey]);\n}","map":{"version":3,"names":["_extends","React","verifyLicense","LicenseInfo","showExpiredAnnualGraceLicenseKeyError","showExpiredAnnualLicenseKeyError","showInvalidLicenseKeyError","showMissingLicenseKeyError","showLicenseKeyPlanMismatchError","showExpiredPackageVersionError","showNotAvailableInInitialProPlanError","LICENSE_STATUS","MuiLicenseInfoContext","sharedLicenseStatuses","useLicenseVerifier","packageName","releaseInfo","key","contextKey","useContext","useMemo","licenseKey","getLicenseKey","licenseVerifier","plan","includes","licenseStatus","fullPackageName","status","Valid","Invalid","NotAvailableInInitialProPlan","OutOfScope","NotFound","ExpiredAnnualGrace","meta","ExpiredAnnual","ExpiredVersion","process","env","NODE_ENV","Error"],"sources":["C:/narendra/Reactjs/mini-expense-tracker/node_modules/@mui/x-license/useLicenseVerifier/useLicenseVerifier.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { verifyLicense } from \"../verifyLicense/verifyLicense.js\";\nimport { LicenseInfo } from \"../utils/licenseInfo.js\";\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError, showNotAvailableInInitialProPlanError } from \"../utils/licenseErrorMessageUtils.js\";\nimport { LICENSE_STATUS } from \"../utils/licenseStatus.js\";\nimport MuiLicenseInfoContext from \"../Unstable_LicenseInfoProvider/MuiLicenseInfoContext.js\";\nexport const sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  const {\n    key: contextKey\n  } = React.useContext(MuiLicenseInfoContext);\n  return React.useMemo(() => {\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey();\n\n    // Cache the response to not trigger the error twice.\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].licenseVerifier;\n    }\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      packageName\n    });\n    const fullPackageName = `@mui/${packageName}`;\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {\n      // Skip\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\n      showInvalidLicenseKeyError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotAvailableInInitialProPlan) {\n      showNotAvailableInInitialProPlanError();\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\n      showLicenseKeyPlanMismatchError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\n      showMissingLicenseKeyError({\n        plan,\n        packageName: fullPackageName\n      });\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\n      showExpiredAnnualGraceLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\n      showExpiredAnnualLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\n      showExpiredPackageVersionError({\n        packageName: fullPackageName\n      });\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('missing status handler');\n    }\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      licenseVerifier: licenseStatus\n    };\n    return licenseStatus;\n  }, [packageName, releaseInfo, contextKey]);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
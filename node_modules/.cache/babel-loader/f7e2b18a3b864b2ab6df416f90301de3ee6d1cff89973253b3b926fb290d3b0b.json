{"ast":null,"code":"'use client';\n\nvar _MenuOpenIcon, _MenuIcon, _Toolbar;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, useTheme } from '@mui/material';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen';\nimport { BrandingContext, NavigationContext, WindowContext } from \"../shared/context.js\";\nimport { Account } from \"../Account/index.js\";\nimport { DashboardSidebarSubNavigation } from \"./DashboardSidebarSubNavigation.js\";\nimport { ToolbarActions } from \"./ToolbarActions.js\";\nimport { AppTitle } from \"./AppTitle.js\";\nimport { getDrawerSxTransitionMixin, getDrawerWidthTransitionMixin } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AppBar = styled(MuiAppBar)(({\n  theme\n}) => ({\n  borderWidth: 0,\n  borderBottomWidth: 1,\n  borderStyle: 'solid',\n  borderColor: (theme.vars ?? theme).palette.divider,\n  boxShadow: 'none',\n  zIndex: theme.zIndex.drawer + 1\n}));\n/**\n *\n * Demos:\n *\n * - [Dashboard Layout](https://mui.com/toolpad/core/react-dashboard-layout/)\n *\n * API:\n *\n * - [DashboardLayout API](https://mui.com/toolpad/core/api/dashboard-layout)\n */\nfunction DashboardLayout(props) {\n  const {\n    children,\n    branding: brandingProp,\n    navigation: navigationProp,\n    disableCollapsibleSidebar = false,\n    defaultSidebarCollapsed = false,\n    hideNavigation = false,\n    sidebarExpandedWidth = 320,\n    slots,\n    slotProps,\n    sx\n  } = props;\n  const theme = useTheme();\n  const brandingContext = React.useContext(BrandingContext);\n  const navigationContext = React.useContext(NavigationContext);\n  const appWindowContext = React.useContext(WindowContext);\n  const branding = {\n    ...brandingContext,\n    ...brandingProp\n  };\n  const navigation = navigationProp ?? navigationContext;\n  const [isDesktopNavigationExpanded, setIsDesktopNavigationExpanded] = React.useState(!defaultSidebarCollapsed);\n  const [isMobileNavigationExpanded, setIsMobileNavigationExpanded] = React.useState(false);\n  const isOverSmViewport = useMediaQuery(theme.breakpoints.up('sm'), appWindowContext && {\n    matchMedia: appWindowContext.matchMedia\n  });\n  const isOverMdViewport = useMediaQuery(theme.breakpoints.up('md'), appWindowContext && {\n    matchMedia: appWindowContext.matchMedia\n  });\n  const isNavigationExpanded = isOverMdViewport ? isDesktopNavigationExpanded : isMobileNavigationExpanded;\n  const setIsNavigationExpanded = React.useCallback(newExpanded => {\n    if (isOverMdViewport) {\n      setIsDesktopNavigationExpanded(newExpanded);\n    } else {\n      setIsMobileNavigationExpanded(newExpanded);\n    }\n  }, [isOverMdViewport]);\n  const [isNavigationFullyExpanded, setIsNavigationFullyExpanded] = React.useState(isNavigationExpanded);\n  React.useEffect(() => {\n    if (isNavigationExpanded) {\n      const drawerWidthTransitionTimeout = setTimeout(() => {\n        setIsNavigationFullyExpanded(true);\n      }, theme.transitions.duration.enteringScreen);\n      return () => clearTimeout(drawerWidthTransitionTimeout);\n    }\n    setIsNavigationFullyExpanded(false);\n    return () => {};\n  }, [isNavigationExpanded, theme]);\n  const selectedItemIdRef = React.useRef('');\n  const handleSetNavigationExpanded = React.useCallback(newExpanded => () => {\n    setIsNavigationExpanded(newExpanded);\n  }, [setIsNavigationExpanded]);\n  const toggleNavigationExpanded = React.useCallback(() => {\n    setIsNavigationExpanded(!isNavigationExpanded);\n  }, [isNavigationExpanded, setIsNavigationExpanded]);\n  const handleNavigationLinkClick = React.useCallback(() => {\n    selectedItemIdRef.current = '';\n    setIsMobileNavigationExpanded(false);\n  }, [setIsMobileNavigationExpanded]);\n\n  // If useEffect was used, the reset would also happen on the client render after SSR which we don't need\n  React.useMemo(() => {\n    if (navigation) {\n      selectedItemIdRef.current = '';\n    }\n  }, [navigation]);\n  const isDesktopMini = !disableCollapsibleSidebar && !isDesktopNavigationExpanded;\n  const isMobileMini = !disableCollapsibleSidebar && !isMobileNavigationExpanded;\n  const getMenuIcon = React.useCallback(isExpanded => {\n    const expandMenuActionText = 'Expand';\n    const collapseMenuActionText = 'Collapse';\n    return /*#__PURE__*/_jsx(Tooltip, {\n      title: `${isExpanded ? collapseMenuActionText : expandMenuActionText} menu`,\n      enterDelay: 1000,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(IconButton, {\n          \"aria-label\": `${isExpanded ? collapseMenuActionText : expandMenuActionText} navigation menu`,\n          onClick: toggleNavigationExpanded,\n          children: isExpanded ? _MenuOpenIcon || (_MenuOpenIcon = /*#__PURE__*/_jsx(MenuOpenIcon, {})) : _MenuIcon || (_MenuIcon = /*#__PURE__*/_jsx(MenuIcon, {}))\n        })\n      })\n    });\n  }, [toggleNavigationExpanded]);\n  const hasDrawerTransitions = isOverSmViewport && (!disableCollapsibleSidebar || isOverMdViewport);\n  const ToolbarActionsSlot = slots?.toolbarActions ?? ToolbarActions;\n  const ToolbarAccountSlot = slots?.toolbarAccount ?? Account;\n  const SidebarFooterSlot = slots?.sidebarFooter ?? null;\n  const getDrawerContent = React.useCallback((isMini, viewport) => /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [_Toolbar || (_Toolbar = /*#__PURE__*/_jsx(Toolbar, {})), /*#__PURE__*/_jsxs(Box, {\n      component: \"nav\",\n      \"aria-label\": `${viewport.charAt(0).toUpperCase()}${viewport.slice(1)}`,\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        overflow: 'auto',\n        pt: navigation[0]?.kind === 'header' && !isMini ? 0 : 2,\n        ...(hasDrawerTransitions ? getDrawerSxTransitionMixin(isNavigationFullyExpanded, 'padding') : {})\n      },\n      children: [/*#__PURE__*/_jsx(DashboardSidebarSubNavigation, {\n        subNavigation: navigation,\n        onLinkClick: handleNavigationLinkClick,\n        isMini: isMini,\n        isFullyExpanded: isNavigationFullyExpanded,\n        hasDrawerTransitions: hasDrawerTransitions,\n        selectedItemId: selectedItemIdRef.current\n      }), SidebarFooterSlot ? /*#__PURE__*/_jsx(SidebarFooterSlot, {\n        mini: isMini,\n        ...slotProps?.sidebarFooter\n      }) : null]\n    })]\n  }), [SidebarFooterSlot, handleNavigationLinkClick, hasDrawerTransitions, isNavigationFullyExpanded, navigation, slotProps?.sidebarFooter]);\n  const getDrawerSharedSx = React.useCallback((isMini, isTemporary) => {\n    const drawerWidth = isMini ? 64 : sidebarExpandedWidth;\n    return {\n      displayPrint: 'none',\n      width: drawerWidth,\n      flexShrink: 0,\n      ...getDrawerWidthTransitionMixin(isNavigationExpanded),\n      ...(isTemporary ? {\n        position: 'absolute'\n      } : {}),\n      [`& .MuiDrawer-paper`]: {\n        position: 'absolute',\n        width: drawerWidth,\n        boxSizing: 'border-box',\n        backgroundImage: 'none',\n        ...getDrawerWidthTransitionMixin(isNavigationExpanded)\n      }\n    };\n  }, [isNavigationExpanded, sidebarExpandedWidth]);\n  const layoutRef = React.useRef(null);\n  return /*#__PURE__*/_jsxs(Box, {\n    ref: layoutRef,\n    sx: {\n      position: 'relative',\n      display: 'flex',\n      overflow: 'hidden',\n      height: '100vh',\n      width: '100vw',\n      ...sx\n    },\n    children: [/*#__PURE__*/_jsx(AppBar, {\n      color: \"inherit\",\n      position: \"absolute\",\n      sx: {\n        displayPrint: 'none'\n      },\n      children: /*#__PURE__*/_jsx(Toolbar, {\n        sx: {\n          backgroundColor: 'inherit',\n          mx: {\n            xs: -0.75,\n            sm: -1.5\n          }\n        },\n        children: /*#__PURE__*/_jsxs(Stack, {\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          sx: {\n            flexWrap: 'wrap',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxs(Stack, {\n            direction: \"row\",\n            children: [!hideNavigation ? /*#__PURE__*/_jsxs(React.Fragment, {\n              children: [/*#__PURE__*/_jsx(Box, {\n                sx: {\n                  mr: {\n                    sm: disableCollapsibleSidebar ? 0 : 1\n                  },\n                  display: {\n                    md: 'none'\n                  }\n                },\n                children: getMenuIcon(isMobileNavigationExpanded)\n              }), /*#__PURE__*/_jsx(Box, {\n                sx: {\n                  display: {\n                    xs: 'none',\n                    md: disableCollapsibleSidebar ? 'none' : 'block'\n                  },\n                  mr: disableCollapsibleSidebar ? 0 : 1\n                },\n                children: getMenuIcon(isDesktopNavigationExpanded)\n              })]\n            }) : null, slots?.appTitle ? /*#__PURE__*/_jsx(slots.appTitle, {\n              ...slotProps?.appTitle\n            }) : /*#__PURE__*/\n            /* Hierarchy of application of `branding`\n             * 1. Branding prop passed in the `slotProps.appTitle`\n             * 2. Branding prop passed to the `DashboardLayout`\n             * 3. Branding prop passed to the `AppProvider`\n             */\n            _jsx(AppTitle, {\n              branding: branding,\n              ...slotProps?.appTitle\n            })]\n          }), /*#__PURE__*/_jsxs(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            spacing: 1,\n            sx: {\n              marginLeft: 'auto'\n            },\n            children: [/*#__PURE__*/_jsx(ToolbarActionsSlot, {\n              ...slotProps?.toolbarActions\n            }), /*#__PURE__*/_jsx(ToolbarAccountSlot, {\n              ...slotProps?.toolbarAccount\n            })]\n          })]\n        })\n      })\n    }), !hideNavigation ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(Drawer, {\n        container: layoutRef.current,\n        variant: \"temporary\",\n        open: isMobileNavigationExpanded,\n        onClose: handleSetNavigationExpanded(false),\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n        },\n        sx: {\n          display: {\n            xs: 'block',\n            sm: disableCollapsibleSidebar ? 'block' : 'none',\n            md: 'none'\n          },\n          ...getDrawerSharedSx(false, true)\n        },\n        children: getDrawerContent(false, 'phone')\n      }), /*#__PURE__*/_jsx(Drawer, {\n        variant: \"permanent\",\n        sx: {\n          display: {\n            xs: 'none',\n            sm: disableCollapsibleSidebar ? 'none' : 'block',\n            md: 'none'\n          },\n          ...getDrawerSharedSx(isMobileMini, false)\n        },\n        children: getDrawerContent(isMobileMini, 'tablet')\n      }), /*#__PURE__*/_jsx(Drawer, {\n        variant: \"permanent\",\n        sx: {\n          display: {\n            xs: 'none',\n            md: 'block'\n          },\n          ...getDrawerSharedSx(isDesktopMini, false)\n        },\n        children: getDrawerContent(isDesktopMini, 'desktop')\n      })]\n    }) : null, /*#__PURE__*/_jsxs(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        minWidth: 0\n      },\n      children: [/*#__PURE__*/_jsx(Toolbar, {\n        sx: {\n          displayPrint: 'none'\n        }\n      }), /*#__PURE__*/_jsx(Box, {\n        component: \"main\",\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          overflow: 'auto'\n        },\n        children: children\n      })]\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DashboardLayout.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Branding options for the dashboard.\n   * @default null\n   */\n  branding: PropTypes.shape({\n    homeUrl: PropTypes.string,\n    logo: PropTypes.node,\n    title: PropTypes.string\n  }),\n  /**\n   * The content of the dashboard.\n   */\n  children: PropTypes.node,\n  /**\n   * Whether the sidebar should start collapsed in desktop size screens.\n   * @default false\n   */\n  defaultSidebarCollapsed: PropTypes.bool,\n  /**\n   * Whether the sidebar should not be collapsible to a mini variant in desktop and tablet viewports.\n   * @default false\n   */\n  disableCollapsibleSidebar: PropTypes.bool,\n  /**\n   * Whether the navigation bar and menu icon should be hidden\n   * @default false\n   */\n  hideNavigation: PropTypes.bool,\n  /**\n   * Navigation definition for the dashboard.\n   * @default []\n   */\n  navigation: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n    action: PropTypes.node,\n    children: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.shape({\n      kind: PropTypes.oneOf(['header']).isRequired,\n      title: PropTypes.string.isRequired\n    }), PropTypes.shape({\n      kind: PropTypes.oneOf(['divider']).isRequired\n    })]).isRequired),\n    icon: PropTypes.node,\n    kind: PropTypes.oneOf(['page']),\n    pattern: PropTypes.string,\n    segment: PropTypes.string,\n    title: PropTypes.string\n  }), PropTypes.shape({\n    kind: PropTypes.oneOf(['header']).isRequired,\n    title: PropTypes.string.isRequired\n  }), PropTypes.shape({\n    kind: PropTypes.oneOf(['divider']).isRequired\n  })]).isRequired),\n  /**\n   * Width of the sidebar when expanded.\n   * @default 320\n   */\n  sidebarExpandedWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    appTitle: PropTypes.shape({\n      branding: PropTypes.shape({\n        homeUrl: PropTypes.string,\n        logo: PropTypes.node,\n        title: PropTypes.string\n      })\n    }),\n    sidebarFooter: PropTypes.shape({\n      mini: PropTypes.bool.isRequired\n    }),\n    toolbarAccount: PropTypes.shape({\n      localeText: PropTypes.shape({\n        iconButtonAriaLabel: PropTypes.string,\n        signInLabel: PropTypes.string,\n        signOutLabel: PropTypes.string\n      }),\n      slotProps: PropTypes.shape({\n        popover: PropTypes.object,\n        popoverContent: PropTypes.object,\n        preview: PropTypes.object,\n        signInButton: PropTypes.object,\n        signOutButton: PropTypes.object\n      }),\n      slots: PropTypes.shape({\n        popover: PropTypes.elementType,\n        popoverContent: PropTypes.elementType,\n        preview: PropTypes.elementType,\n        signInButton: PropTypes.elementType,\n        signOutButton: PropTypes.elementType\n      })\n    }),\n    toolbarActions: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    appTitle: PropTypes.elementType,\n    sidebarFooter: PropTypes.elementType,\n    toolbarAccount: PropTypes.elementType,\n    toolbarActions: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { DashboardLayout };","map":{"version":3,"names":["_MenuOpenIcon","_MenuIcon","_Toolbar","React","PropTypes","styled","useTheme","MuiAppBar","Box","Drawer","IconButton","Stack","Toolbar","Tooltip","useMediaQuery","MenuIcon","MenuOpenIcon","BrandingContext","NavigationContext","WindowContext","Account","DashboardSidebarSubNavigation","ToolbarActions","AppTitle","getDrawerSxTransitionMixin","getDrawerWidthTransitionMixin","jsx","_jsx","jsxs","_jsxs","AppBar","theme","borderWidth","borderBottomWidth","borderStyle","borderColor","vars","palette","divider","boxShadow","zIndex","drawer","DashboardLayout","props","children","branding","brandingProp","navigation","navigationProp","disableCollapsibleSidebar","defaultSidebarCollapsed","hideNavigation","sidebarExpandedWidth","slots","slotProps","sx","brandingContext","useContext","navigationContext","appWindowContext","isDesktopNavigationExpanded","setIsDesktopNavigationExpanded","useState","isMobileNavigationExpanded","setIsMobileNavigationExpanded","isOverSmViewport","breakpoints","up","matchMedia","isOverMdViewport","isNavigationExpanded","setIsNavigationExpanded","useCallback","newExpanded","isNavigationFullyExpanded","setIsNavigationFullyExpanded","useEffect","drawerWidthTransitionTimeout","setTimeout","transitions","duration","enteringScreen","clearTimeout","selectedItemIdRef","useRef","handleSetNavigationExpanded","toggleNavigationExpanded","handleNavigationLinkClick","current","useMemo","isDesktopMini","isMobileMini","getMenuIcon","isExpanded","expandMenuActionText","collapseMenuActionText","title","enterDelay","onClick","hasDrawerTransitions","ToolbarActionsSlot","toolbarActions","ToolbarAccountSlot","toolbarAccount","SidebarFooterSlot","sidebarFooter","getDrawerContent","isMini","viewport","Fragment","component","charAt","toUpperCase","slice","height","display","flexDirection","justifyContent","overflow","pt","kind","subNavigation","onLinkClick","isFullyExpanded","selectedItemId","mini","getDrawerSharedSx","isTemporary","drawerWidth","displayPrint","width","flexShrink","position","boxSizing","backgroundImage","layoutRef","ref","color","backgroundColor","mx","xs","sm","direction","alignItems","flexWrap","mr","md","appTitle","spacing","marginLeft","container","variant","open","onClose","ModalProps","keepMounted","flex","minWidth","process","env","NODE_ENV","propTypes","shape","homeUrl","string","logo","node","bool","arrayOf","oneOfType","action","object","oneOf","isRequired","icon","pattern","segment","number","localeText","iconButtonAriaLabel","signInLabel","signOutLabel","popover","popoverContent","preview","signInButton","signOutButton","elementType","func"],"sources":["C:/narendra/Reactjs/mini-expense-tracker/node_modules/@toolpad/core/DashboardLayout/DashboardLayout.js"],"sourcesContent":["'use client';\n\nvar _MenuOpenIcon, _MenuIcon, _Toolbar;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, useTheme } from '@mui/material';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\nimport Toolbar from '@mui/material/Toolbar';\nimport Tooltip from '@mui/material/Tooltip';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen';\nimport { BrandingContext, NavigationContext, WindowContext } from \"../shared/context.js\";\nimport { Account } from \"../Account/index.js\";\nimport { DashboardSidebarSubNavigation } from \"./DashboardSidebarSubNavigation.js\";\nimport { ToolbarActions } from \"./ToolbarActions.js\";\nimport { AppTitle } from \"./AppTitle.js\";\nimport { getDrawerSxTransitionMixin, getDrawerWidthTransitionMixin } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AppBar = styled(MuiAppBar)(({\n  theme\n}) => ({\n  borderWidth: 0,\n  borderBottomWidth: 1,\n  borderStyle: 'solid',\n  borderColor: (theme.vars ?? theme).palette.divider,\n  boxShadow: 'none',\n  zIndex: theme.zIndex.drawer + 1\n}));\n/**\n *\n * Demos:\n *\n * - [Dashboard Layout](https://mui.com/toolpad/core/react-dashboard-layout/)\n *\n * API:\n *\n * - [DashboardLayout API](https://mui.com/toolpad/core/api/dashboard-layout)\n */\nfunction DashboardLayout(props) {\n  const {\n    children,\n    branding: brandingProp,\n    navigation: navigationProp,\n    disableCollapsibleSidebar = false,\n    defaultSidebarCollapsed = false,\n    hideNavigation = false,\n    sidebarExpandedWidth = 320,\n    slots,\n    slotProps,\n    sx\n  } = props;\n  const theme = useTheme();\n  const brandingContext = React.useContext(BrandingContext);\n  const navigationContext = React.useContext(NavigationContext);\n  const appWindowContext = React.useContext(WindowContext);\n  const branding = {\n    ...brandingContext,\n    ...brandingProp\n  };\n  const navigation = navigationProp ?? navigationContext;\n  const [isDesktopNavigationExpanded, setIsDesktopNavigationExpanded] = React.useState(!defaultSidebarCollapsed);\n  const [isMobileNavigationExpanded, setIsMobileNavigationExpanded] = React.useState(false);\n  const isOverSmViewport = useMediaQuery(theme.breakpoints.up('sm'), appWindowContext && {\n    matchMedia: appWindowContext.matchMedia\n  });\n  const isOverMdViewport = useMediaQuery(theme.breakpoints.up('md'), appWindowContext && {\n    matchMedia: appWindowContext.matchMedia\n  });\n  const isNavigationExpanded = isOverMdViewport ? isDesktopNavigationExpanded : isMobileNavigationExpanded;\n  const setIsNavigationExpanded = React.useCallback(newExpanded => {\n    if (isOverMdViewport) {\n      setIsDesktopNavigationExpanded(newExpanded);\n    } else {\n      setIsMobileNavigationExpanded(newExpanded);\n    }\n  }, [isOverMdViewport]);\n  const [isNavigationFullyExpanded, setIsNavigationFullyExpanded] = React.useState(isNavigationExpanded);\n  React.useEffect(() => {\n    if (isNavigationExpanded) {\n      const drawerWidthTransitionTimeout = setTimeout(() => {\n        setIsNavigationFullyExpanded(true);\n      }, theme.transitions.duration.enteringScreen);\n      return () => clearTimeout(drawerWidthTransitionTimeout);\n    }\n    setIsNavigationFullyExpanded(false);\n    return () => {};\n  }, [isNavigationExpanded, theme]);\n  const selectedItemIdRef = React.useRef('');\n  const handleSetNavigationExpanded = React.useCallback(newExpanded => () => {\n    setIsNavigationExpanded(newExpanded);\n  }, [setIsNavigationExpanded]);\n  const toggleNavigationExpanded = React.useCallback(() => {\n    setIsNavigationExpanded(!isNavigationExpanded);\n  }, [isNavigationExpanded, setIsNavigationExpanded]);\n  const handleNavigationLinkClick = React.useCallback(() => {\n    selectedItemIdRef.current = '';\n    setIsMobileNavigationExpanded(false);\n  }, [setIsMobileNavigationExpanded]);\n\n  // If useEffect was used, the reset would also happen on the client render after SSR which we don't need\n  React.useMemo(() => {\n    if (navigation) {\n      selectedItemIdRef.current = '';\n    }\n  }, [navigation]);\n  const isDesktopMini = !disableCollapsibleSidebar && !isDesktopNavigationExpanded;\n  const isMobileMini = !disableCollapsibleSidebar && !isMobileNavigationExpanded;\n  const getMenuIcon = React.useCallback(isExpanded => {\n    const expandMenuActionText = 'Expand';\n    const collapseMenuActionText = 'Collapse';\n    return /*#__PURE__*/_jsx(Tooltip, {\n      title: `${isExpanded ? collapseMenuActionText : expandMenuActionText} menu`,\n      enterDelay: 1000,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(IconButton, {\n          \"aria-label\": `${isExpanded ? collapseMenuActionText : expandMenuActionText} navigation menu`,\n          onClick: toggleNavigationExpanded,\n          children: isExpanded ? _MenuOpenIcon || (_MenuOpenIcon = /*#__PURE__*/_jsx(MenuOpenIcon, {})) : _MenuIcon || (_MenuIcon = /*#__PURE__*/_jsx(MenuIcon, {}))\n        })\n      })\n    });\n  }, [toggleNavigationExpanded]);\n  const hasDrawerTransitions = isOverSmViewport && (!disableCollapsibleSidebar || isOverMdViewport);\n  const ToolbarActionsSlot = slots?.toolbarActions ?? ToolbarActions;\n  const ToolbarAccountSlot = slots?.toolbarAccount ?? Account;\n  const SidebarFooterSlot = slots?.sidebarFooter ?? null;\n  const getDrawerContent = React.useCallback((isMini, viewport) => /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [_Toolbar || (_Toolbar = /*#__PURE__*/_jsx(Toolbar, {})), /*#__PURE__*/_jsxs(Box, {\n      component: \"nav\",\n      \"aria-label\": `${viewport.charAt(0).toUpperCase()}${viewport.slice(1)}`,\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        overflow: 'auto',\n        pt: navigation[0]?.kind === 'header' && !isMini ? 0 : 2,\n        ...(hasDrawerTransitions ? getDrawerSxTransitionMixin(isNavigationFullyExpanded, 'padding') : {})\n      },\n      children: [/*#__PURE__*/_jsx(DashboardSidebarSubNavigation, {\n        subNavigation: navigation,\n        onLinkClick: handleNavigationLinkClick,\n        isMini: isMini,\n        isFullyExpanded: isNavigationFullyExpanded,\n        hasDrawerTransitions: hasDrawerTransitions,\n        selectedItemId: selectedItemIdRef.current\n      }), SidebarFooterSlot ? /*#__PURE__*/_jsx(SidebarFooterSlot, {\n        mini: isMini,\n        ...slotProps?.sidebarFooter\n      }) : null]\n    })]\n  }), [SidebarFooterSlot, handleNavigationLinkClick, hasDrawerTransitions, isNavigationFullyExpanded, navigation, slotProps?.sidebarFooter]);\n  const getDrawerSharedSx = React.useCallback((isMini, isTemporary) => {\n    const drawerWidth = isMini ? 64 : sidebarExpandedWidth;\n    return {\n      displayPrint: 'none',\n      width: drawerWidth,\n      flexShrink: 0,\n      ...getDrawerWidthTransitionMixin(isNavigationExpanded),\n      ...(isTemporary ? {\n        position: 'absolute'\n      } : {}),\n      [`& .MuiDrawer-paper`]: {\n        position: 'absolute',\n        width: drawerWidth,\n        boxSizing: 'border-box',\n        backgroundImage: 'none',\n        ...getDrawerWidthTransitionMixin(isNavigationExpanded)\n      }\n    };\n  }, [isNavigationExpanded, sidebarExpandedWidth]);\n  const layoutRef = React.useRef(null);\n  return /*#__PURE__*/_jsxs(Box, {\n    ref: layoutRef,\n    sx: {\n      position: 'relative',\n      display: 'flex',\n      overflow: 'hidden',\n      height: '100vh',\n      width: '100vw',\n      ...sx\n    },\n    children: [/*#__PURE__*/_jsx(AppBar, {\n      color: \"inherit\",\n      position: \"absolute\",\n      sx: {\n        displayPrint: 'none'\n      },\n      children: /*#__PURE__*/_jsx(Toolbar, {\n        sx: {\n          backgroundColor: 'inherit',\n          mx: {\n            xs: -0.75,\n            sm: -1.5\n          }\n        },\n        children: /*#__PURE__*/_jsxs(Stack, {\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          sx: {\n            flexWrap: 'wrap',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxs(Stack, {\n            direction: \"row\",\n            children: [!hideNavigation ? /*#__PURE__*/_jsxs(React.Fragment, {\n              children: [/*#__PURE__*/_jsx(Box, {\n                sx: {\n                  mr: {\n                    sm: disableCollapsibleSidebar ? 0 : 1\n                  },\n                  display: {\n                    md: 'none'\n                  }\n                },\n                children: getMenuIcon(isMobileNavigationExpanded)\n              }), /*#__PURE__*/_jsx(Box, {\n                sx: {\n                  display: {\n                    xs: 'none',\n                    md: disableCollapsibleSidebar ? 'none' : 'block'\n                  },\n                  mr: disableCollapsibleSidebar ? 0 : 1\n                },\n                children: getMenuIcon(isDesktopNavigationExpanded)\n              })]\n            }) : null, slots?.appTitle ? /*#__PURE__*/_jsx(slots.appTitle, {\n              ...slotProps?.appTitle\n            }) :\n            /*#__PURE__*/\n            /* Hierarchy of application of `branding`\n             * 1. Branding prop passed in the `slotProps.appTitle`\n             * 2. Branding prop passed to the `DashboardLayout`\n             * 3. Branding prop passed to the `AppProvider`\n             */\n            _jsx(AppTitle, {\n              branding: branding,\n              ...slotProps?.appTitle\n            })]\n          }), /*#__PURE__*/_jsxs(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            spacing: 1,\n            sx: {\n              marginLeft: 'auto'\n            },\n            children: [/*#__PURE__*/_jsx(ToolbarActionsSlot, {\n              ...slotProps?.toolbarActions\n            }), /*#__PURE__*/_jsx(ToolbarAccountSlot, {\n              ...slotProps?.toolbarAccount\n            })]\n          })]\n        })\n      })\n    }), !hideNavigation ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(Drawer, {\n        container: layoutRef.current,\n        variant: \"temporary\",\n        open: isMobileNavigationExpanded,\n        onClose: handleSetNavigationExpanded(false),\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n        },\n        sx: {\n          display: {\n            xs: 'block',\n            sm: disableCollapsibleSidebar ? 'block' : 'none',\n            md: 'none'\n          },\n          ...getDrawerSharedSx(false, true)\n        },\n        children: getDrawerContent(false, 'phone')\n      }), /*#__PURE__*/_jsx(Drawer, {\n        variant: \"permanent\",\n        sx: {\n          display: {\n            xs: 'none',\n            sm: disableCollapsibleSidebar ? 'none' : 'block',\n            md: 'none'\n          },\n          ...getDrawerSharedSx(isMobileMini, false)\n        },\n        children: getDrawerContent(isMobileMini, 'tablet')\n      }), /*#__PURE__*/_jsx(Drawer, {\n        variant: \"permanent\",\n        sx: {\n          display: {\n            xs: 'none',\n            md: 'block'\n          },\n          ...getDrawerSharedSx(isDesktopMini, false)\n        },\n        children: getDrawerContent(isDesktopMini, 'desktop')\n      })]\n    }) : null, /*#__PURE__*/_jsxs(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        minWidth: 0\n      },\n      children: [/*#__PURE__*/_jsx(Toolbar, {\n        sx: {\n          displayPrint: 'none'\n        }\n      }), /*#__PURE__*/_jsx(Box, {\n        component: \"main\",\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          overflow: 'auto'\n        },\n        children: children\n      })]\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DashboardLayout.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Branding options for the dashboard.\n   * @default null\n   */\n  branding: PropTypes.shape({\n    homeUrl: PropTypes.string,\n    logo: PropTypes.node,\n    title: PropTypes.string\n  }),\n  /**\n   * The content of the dashboard.\n   */\n  children: PropTypes.node,\n  /**\n   * Whether the sidebar should start collapsed in desktop size screens.\n   * @default false\n   */\n  defaultSidebarCollapsed: PropTypes.bool,\n  /**\n   * Whether the sidebar should not be collapsible to a mini variant in desktop and tablet viewports.\n   * @default false\n   */\n  disableCollapsibleSidebar: PropTypes.bool,\n  /**\n   * Whether the navigation bar and menu icon should be hidden\n   * @default false\n   */\n  hideNavigation: PropTypes.bool,\n  /**\n   * Navigation definition for the dashboard.\n   * @default []\n   */\n  navigation: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.shape({\n    action: PropTypes.node,\n    children: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.shape({\n      kind: PropTypes.oneOf(['header']).isRequired,\n      title: PropTypes.string.isRequired\n    }), PropTypes.shape({\n      kind: PropTypes.oneOf(['divider']).isRequired\n    })]).isRequired),\n    icon: PropTypes.node,\n    kind: PropTypes.oneOf(['page']),\n    pattern: PropTypes.string,\n    segment: PropTypes.string,\n    title: PropTypes.string\n  }), PropTypes.shape({\n    kind: PropTypes.oneOf(['header']).isRequired,\n    title: PropTypes.string.isRequired\n  }), PropTypes.shape({\n    kind: PropTypes.oneOf(['divider']).isRequired\n  })]).isRequired),\n  /**\n   * Width of the sidebar when expanded.\n   * @default 320\n   */\n  sidebarExpandedWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    appTitle: PropTypes.shape({\n      branding: PropTypes.shape({\n        homeUrl: PropTypes.string,\n        logo: PropTypes.node,\n        title: PropTypes.string\n      })\n    }),\n    sidebarFooter: PropTypes.shape({\n      mini: PropTypes.bool.isRequired\n    }),\n    toolbarAccount: PropTypes.shape({\n      localeText: PropTypes.shape({\n        iconButtonAriaLabel: PropTypes.string,\n        signInLabel: PropTypes.string,\n        signOutLabel: PropTypes.string\n      }),\n      slotProps: PropTypes.shape({\n        popover: PropTypes.object,\n        popoverContent: PropTypes.object,\n        preview: PropTypes.object,\n        signInButton: PropTypes.object,\n        signOutButton: PropTypes.object\n      }),\n      slots: PropTypes.shape({\n        popover: PropTypes.elementType,\n        popoverContent: PropTypes.elementType,\n        preview: PropTypes.elementType,\n        signInButton: PropTypes.elementType,\n        signOutButton: PropTypes.elementType\n      })\n    }),\n    toolbarActions: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    appTitle: PropTypes.elementType,\n    sidebarFooter: PropTypes.elementType,\n    toolbarAccount: PropTypes.elementType,\n    toolbarActions: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { DashboardLayout };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
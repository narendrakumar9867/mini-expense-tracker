{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useId from '@mui/utils/useId';\nimport useChartDimensions from \"../hooks/useChartDimensions.js\";\n\n/**\n * Defines the area in which it is possible to draw the charts.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DrawingContext = /*#__PURE__*/React.createContext({\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  height: 300,\n  width: 400,\n  chartId: '',\n  isPointInside: () => false\n});\nif (process.env.NODE_ENV !== 'production') {\n  DrawingContext.displayName = 'DrawingContext';\n}\nexport const SvgContext = /*#__PURE__*/React.createContext({\n  isInitialized: false,\n  data: {\n    current: null\n  }\n});\nif (process.env.NODE_ENV !== 'production') {\n  SvgContext.displayName = 'SvgContext';\n}\nexport function DrawingProvider(props) {\n  const {\n    width,\n    height,\n    margin,\n    svgRef,\n    children\n  } = props;\n  const drawingArea = useChartDimensions(width, height, margin);\n  const chartId = useId();\n  const isPointInside = React.useCallback((_ref, options) => {\n    let {\n      x,\n      y\n    } = _ref;\n    // For element allowed to overflow, wrapping them in <g data-drawing-container /> make them fully part of the drawing area.\n    if (options !== null && options !== void 0 && options.targetElement && options !== null && options !== void 0 && options.targetElement.closest('[data-drawing-container]')) {\n      return true;\n    }\n    const isInsideX = x >= drawingArea.left - 1 && x <= drawingArea.left + drawingArea.width;\n    const isInsideY = y >= drawingArea.top - 1 && y <= drawingArea.top + drawingArea.height;\n    if ((options === null || options === void 0 ? void 0 : options.direction) === 'x') {\n      return isInsideX;\n    }\n    if ((options === null || options === void 0 ? void 0 : options.direction) === 'y') {\n      return isInsideY;\n    }\n    return isInsideX && isInsideY;\n  }, [drawingArea]);\n  const value = React.useMemo(() => _extends({\n    chartId: chartId !== null && chartId !== void 0 ? chartId : ''\n  }, drawingArea, {\n    isPointInside\n  }), [chartId, drawingArea, isPointInside]);\n  const refValue = React.useMemo(() => ({\n    isInitialized: true,\n    data: svgRef\n  }), [svgRef]);\n  return /*#__PURE__*/_jsx(SvgContext.Provider, {\n    value: refValue,\n    children: /*#__PURE__*/_jsx(DrawingContext.Provider, {\n      value: value,\n      children: children\n    })\n  });\n}","map":{"version":3,"names":["_extends","React","useId","useChartDimensions","jsx","_jsx","DrawingContext","createContext","top","left","bottom","right","height","width","chartId","isPointInside","process","env","NODE_ENV","displayName","SvgContext","isInitialized","data","current","DrawingProvider","props","margin","svgRef","children","drawingArea","useCallback","_ref","options","x","y","targetElement","closest","isInsideX","isInsideY","direction","value","useMemo","refValue","Provider"],"sources":["C:/narendra/Reactjs/Frontend/node_modules/@mui/x-charts/context/DrawingProvider.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useId from '@mui/utils/useId';\nimport useChartDimensions from \"../hooks/useChartDimensions.js\";\n\n/**\n * Defines the area in which it is possible to draw the charts.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DrawingContext = /*#__PURE__*/React.createContext({\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n  height: 300,\n  width: 400,\n  chartId: '',\n  isPointInside: () => false\n});\nif (process.env.NODE_ENV !== 'production') {\n  DrawingContext.displayName = 'DrawingContext';\n}\nexport const SvgContext = /*#__PURE__*/React.createContext({\n  isInitialized: false,\n  data: {\n    current: null\n  }\n});\nif (process.env.NODE_ENV !== 'production') {\n  SvgContext.displayName = 'SvgContext';\n}\nexport function DrawingProvider(props) {\n  const {\n    width,\n    height,\n    margin,\n    svgRef,\n    children\n  } = props;\n  const drawingArea = useChartDimensions(width, height, margin);\n  const chartId = useId();\n  const isPointInside = React.useCallback(({\n    x,\n    y\n  }, options) => {\n    // For element allowed to overflow, wrapping them in <g data-drawing-container /> make them fully part of the drawing area.\n    if (options?.targetElement && options?.targetElement.closest('[data-drawing-container]')) {\n      return true;\n    }\n    const isInsideX = x >= drawingArea.left - 1 && x <= drawingArea.left + drawingArea.width;\n    const isInsideY = y >= drawingArea.top - 1 && y <= drawingArea.top + drawingArea.height;\n    if (options?.direction === 'x') {\n      return isInsideX;\n    }\n    if (options?.direction === 'y') {\n      return isInsideY;\n    }\n    return isInsideX && isInsideY;\n  }, [drawingArea]);\n  const value = React.useMemo(() => _extends({\n    chartId: chartId ?? ''\n  }, drawingArea, {\n    isPointInside\n  }), [chartId, drawingArea, isPointInside]);\n  const refValue = React.useMemo(() => ({\n    isInitialized: true,\n    data: svgRef\n  }), [svgRef]);\n  return /*#__PURE__*/_jsx(SvgContext.Provider, {\n    value: refValue,\n    children: /*#__PURE__*/_jsx(DrawingContext.Provider, {\n      value: value,\n      children: children\n    })\n  });\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,kBAAkB,MAAM,gCAAgC;;AAE/D;AACA;AACA;AACA,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,MAAMC,cAAc,GAAG,aAAaL,KAAK,CAACM,aAAa,CAAC;EAC7DC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE,GAAG;EACVC,OAAO,EAAE,EAAE;EACXC,aAAa,EAAEA,CAAA,KAAM;AACvB,CAAC,CAAC;AACF,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCZ,cAAc,CAACa,WAAW,GAAG,gBAAgB;AAC/C;AACA,OAAO,MAAMC,UAAU,GAAG,aAAanB,KAAK,CAACM,aAAa,CAAC;EACzDc,aAAa,EAAE,KAAK;EACpBC,IAAI,EAAE;IACJC,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AACF,IAAIP,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCE,UAAU,CAACD,WAAW,GAAG,YAAY;AACvC;AACA,OAAO,SAASK,eAAeA,CAACC,KAAK,EAAE;EACrC,MAAM;IACJZ,KAAK;IACLD,MAAM;IACNc,MAAM;IACNC,MAAM;IACNC;EACF,CAAC,GAAGH,KAAK;EACT,MAAMI,WAAW,GAAG1B,kBAAkB,CAACU,KAAK,EAAED,MAAM,EAAEc,MAAM,CAAC;EAC7D,MAAMZ,OAAO,GAAGZ,KAAK,CAAC,CAAC;EACvB,MAAMa,aAAa,GAAGd,KAAK,CAAC6B,WAAW,CAAC,CAAAC,IAAA,EAGrCC,OAAO,KAAK;IAAA,IAH0B;MACvCC,CAAC;MACDC;IACF,CAAC,GAAAH,IAAA;IACC;IACA,IAAIC,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEG,aAAa,IAAIH,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEG,aAAa,CAACC,OAAO,CAAC,0BAA0B,CAAC,EAAE;MACxF,OAAO,IAAI;IACb;IACA,MAAMC,SAAS,GAAGJ,CAAC,IAAIJ,WAAW,CAACpB,IAAI,GAAG,CAAC,IAAIwB,CAAC,IAAIJ,WAAW,CAACpB,IAAI,GAAGoB,WAAW,CAAChB,KAAK;IACxF,MAAMyB,SAAS,GAAGJ,CAAC,IAAIL,WAAW,CAACrB,GAAG,GAAG,CAAC,IAAI0B,CAAC,IAAIL,WAAW,CAACrB,GAAG,GAAGqB,WAAW,CAACjB,MAAM;IACvF,IAAI,CAAAoB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,SAAS,MAAK,GAAG,EAAE;MAC9B,OAAOF,SAAS;IAClB;IACA,IAAI,CAAAL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,SAAS,MAAK,GAAG,EAAE;MAC9B,OAAOD,SAAS;IAClB;IACA,OAAOD,SAAS,IAAIC,SAAS;EAC/B,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EACjB,MAAMW,KAAK,GAAGvC,KAAK,CAACwC,OAAO,CAAC,MAAMzC,QAAQ,CAAC;IACzCc,OAAO,EAAEA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI;EACtB,CAAC,EAAEe,WAAW,EAAE;IACdd;EACF,CAAC,CAAC,EAAE,CAACD,OAAO,EAAEe,WAAW,EAAEd,aAAa,CAAC,CAAC;EAC1C,MAAM2B,QAAQ,GAAGzC,KAAK,CAACwC,OAAO,CAAC,OAAO;IACpCpB,aAAa,EAAE,IAAI;IACnBC,IAAI,EAAEK;EACR,CAAC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EACb,OAAO,aAAatB,IAAI,CAACe,UAAU,CAACuB,QAAQ,EAAE;IAC5CH,KAAK,EAAEE,QAAQ;IACfd,QAAQ,EAAE,aAAavB,IAAI,CAACC,cAAc,CAACqC,QAAQ,EAAE;MACnDH,KAAK,EAAEA,KAAK;MACZZ,QAAQ,EAAEA;IACZ,CAAC;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import mongoose from \"mongoose\";\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nconst userSchema = new mongoose.Schema({\n  firstname: {\n    type: String,\n    required: true\n  },\n  lastname: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  role: {\n    type: String,\n    enum: [\"USER\", \"ADMIN\"],\n    default: \"USER\"\n  }\n}, {\n  timestamps: true\n});\nuserSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n  this.password = await bcrypt.hash(this.password, 10);\n  next();\n});\nuserSchema.statics.mathPasswordandGenerateToken = async function (email, password) {\n  const user = await this.findOne({\n    email\n  });\n  if (!user) throw new Error(\"User not found\");\n  const isMatch = await bcrypt.compare(password, user.password);\n  if (!isMatch) throw new Error(\"Incorrect password\");\n  const token = jwt.sign({\n    _id: user._id,\n    email: user.email\n  }, process.env.JWT_SECRET, {\n    expiresIn: '1h'\n  });\n  return token;\n};\nexport default mongoose.model('User', userSchema);","map":{"version":3,"names":["mongoose","bcrypt","jwt","userSchema","Schema","firstname","type","String","required","lastname","email","unique","password","role","enum","default","timestamps","pre","next","isModified","hash","statics","mathPasswordandGenerateToken","user","findOne","Error","isMatch","compare","token","sign","_id","process","env","JWT_SECRET","expiresIn","model"],"sources":["C:/narendra/Reactjs/Frontend/src/models/user.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\nimport bcrypt from 'bcryptjs';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst userSchema = new mongoose.Schema(\r\n    {\r\n        firstname: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        lastname: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        email: {\r\n            type: String,\r\n            required: true,\r\n            unique: true,\r\n        },\r\n        password: {\r\n            type: String,\r\n            required: true,\r\n        },\r\n        role: {\r\n            type: String,\r\n            enum: [\"USER\", \"ADMIN\"],\r\n            default: \"USER\",\r\n        },\r\n    },\r\n    { timestamps: true }\r\n);\r\n\r\nuserSchema.pre('save', async function (next) {\r\n    if (!this.isModified('password')) return next();\r\n    this.password = await bcrypt.hash(this.password, 10);\r\n    next();\r\n});\r\n  \r\n  userSchema.statics.mathPasswordandGenerateToken = async function (email, password) {\r\n    const user = await this.findOne({ email });\r\n    if (!user) throw new Error(\"User not found\");\r\n    const isMatch = await bcrypt.compare(password, user.password);\r\n    if (!isMatch) throw new Error(\"Incorrect password\");\r\n  \r\n    const token = jwt.sign({ _id: user._id, email: user.email }, process.env.JWT_SECRET, { expiresIn: '1h' });\r\n    return token;\r\n};\r\n\r\nexport default mongoose.model('User', userSchema);\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,UAAU;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,GAAG,MAAM,cAAc;AAE9B,MAAMC,UAAU,GAAG,IAAIH,QAAQ,CAACI,MAAM,CAClC;EACIC,SAAS,EAAE;IACPC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACNH,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDE,KAAK,EAAE;IACHJ,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdG,MAAM,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACNN,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACd,CAAC;EACDK,IAAI,EAAE;IACFP,IAAI,EAAEC,MAAM;IACZO,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;IACvBC,OAAO,EAAE;EACb;AACJ,CAAC,EACD;EAAEC,UAAU,EAAE;AAAK,CACvB,CAAC;AAEDb,UAAU,CAACc,GAAG,CAAC,MAAM,EAAE,gBAAgBC,IAAI,EAAE;EACzC,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE,OAAOD,IAAI,CAAC,CAAC;EAC/C,IAAI,CAACN,QAAQ,GAAG,MAAMX,MAAM,CAACmB,IAAI,CAAC,IAAI,CAACR,QAAQ,EAAE,EAAE,CAAC;EACpDM,IAAI,CAAC,CAAC;AACV,CAAC,CAAC;AAEAf,UAAU,CAACkB,OAAO,CAACC,4BAA4B,GAAG,gBAAgBZ,KAAK,EAAEE,QAAQ,EAAE;EACjF,MAAMW,IAAI,GAAG,MAAM,IAAI,CAACC,OAAO,CAAC;IAAEd;EAAM,CAAC,CAAC;EAC1C,IAAI,CAACa,IAAI,EAAE,MAAM,IAAIE,KAAK,CAAC,gBAAgB,CAAC;EAC5C,MAAMC,OAAO,GAAG,MAAMzB,MAAM,CAAC0B,OAAO,CAACf,QAAQ,EAAEW,IAAI,CAACX,QAAQ,CAAC;EAC7D,IAAI,CAACc,OAAO,EAAE,MAAM,IAAID,KAAK,CAAC,oBAAoB,CAAC;EAEnD,MAAMG,KAAK,GAAG1B,GAAG,CAAC2B,IAAI,CAAC;IAAEC,GAAG,EAAEP,IAAI,CAACO,GAAG;IAAEpB,KAAK,EAAEa,IAAI,CAACb;EAAM,CAAC,EAAEqB,OAAO,CAACC,GAAG,CAACC,UAAU,EAAE;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;EACzG,OAAON,KAAK;AAChB,CAAC;AAED,eAAe5B,QAAQ,CAACmC,KAAK,CAAC,MAAM,EAAEhC,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
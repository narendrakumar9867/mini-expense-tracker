{"ast":null,"code":"import { Router } from 'express';\nimport User from '../models/user';\nconst router = Router();\nrouter.get('/register', (req, res) => {\n  return res.render('register');\n});\nrouter.get('/login', (req, res) => {\n  return res.render('login');\n});\nrouter.post('/register', async (req, res) => {\n  const {\n    firstname,\n    lastname,\n    email,\n    password\n  } = req.body;\n  await User.create({\n    firstname,\n    lastname,\n    email,\n    password\n  });\n  return res.redirect(\"/\");\n});\nrouter.post('/login', async (req, res) => {\n  const {\n    email,\n    password\n  } = req.body;\n  try {\n    const token = await User.mathPasswordandGenerateToken(email, password);\n    return res.cookie(\"token\", token).redirect(\"/\");\n  } catch (error) {\n    return res.render(\"login\", {\n      error: \"Incorrect email or password\"\n    });\n  }\n});\nrouter.get('/logout', (req, res) => {\n  res.clearCookie(\"token\").redirect(\"/\");\n});\nexport default router;","map":{"version":3,"names":["Router","User","router","get","req","res","render","post","firstname","lastname","email","password","body","create","redirect","token","mathPasswordandGenerateToken","cookie","error","clearCookie"],"sources":["C:/narendra/Reactjs/Frontend/src/routes/user.js"],"sourcesContent":["import { Router } from 'express';\r\nimport User from '../models/user';\r\n\r\nconst router = Router();\r\n\r\nrouter.get('/register', (req, res) => {\r\n  return res.render('register');\r\n});\r\n\r\nrouter.get('/login', (req, res) => {\r\n  return res.render('login');\r\n});\r\n\r\nrouter.post('/register', async (req, res) => {\r\n  const { firstname, lastname, email, password } = req.body;\r\n  await User.create({\r\n    firstname, \r\n    lastname,\r\n    email,\r\n    password,\r\n  });\r\n  return res.redirect(\"/\");\r\n});\r\n\r\nrouter.post('/login', async (req, res) => {\r\n  const { email, password } = req.body;\r\n  try {\r\n    const token = await User.mathPasswordandGenerateToken(email, password);\r\n    return res.cookie(\"token\", token).redirect(\"/\");\r\n  } catch (error) {\r\n    return res.render(\"login\", {\r\n      error: \"Incorrect email or password\",\r\n    })\r\n  }\r\n});\r\n\r\nrouter.get('/logout', (req, res) => {\r\n  res.clearCookie(\"token\").redirect(\"/\");\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,OAAOC,IAAI,MAAM,gBAAgB;AAEjC,MAAMC,MAAM,GAAGF,MAAM,CAAC,CAAC;AAEvBE,MAAM,CAACC,GAAG,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACpC,OAAOA,GAAG,CAACC,MAAM,CAAC,UAAU,CAAC;AAC/B,CAAC,CAAC;AAEFJ,MAAM,CAACC,GAAG,CAAC,QAAQ,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjC,OAAOA,GAAG,CAACC,MAAM,CAAC,OAAO,CAAC;AAC5B,CAAC,CAAC;AAEFJ,MAAM,CAACK,IAAI,CAAC,WAAW,EAAE,OAAOH,GAAG,EAAEC,GAAG,KAAK;EAC3C,MAAM;IAAEG,SAAS;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGP,GAAG,CAACQ,IAAI;EACzD,MAAMX,IAAI,CAACY,MAAM,CAAC;IAChBL,SAAS;IACTC,QAAQ;IACRC,KAAK;IACLC;EACF,CAAC,CAAC;EACF,OAAON,GAAG,CAACS,QAAQ,CAAC,GAAG,CAAC;AAC1B,CAAC,CAAC;AAEFZ,MAAM,CAACK,IAAI,CAAC,QAAQ,EAAE,OAAOH,GAAG,EAAEC,GAAG,KAAK;EACxC,MAAM;IAAEK,KAAK;IAAEC;EAAS,CAAC,GAAGP,GAAG,CAACQ,IAAI;EACpC,IAAI;IACF,MAAMG,KAAK,GAAG,MAAMd,IAAI,CAACe,4BAA4B,CAACN,KAAK,EAAEC,QAAQ,CAAC;IACtE,OAAON,GAAG,CAACY,MAAM,CAAC,OAAO,EAAEF,KAAK,CAAC,CAACD,QAAQ,CAAC,GAAG,CAAC;EACjD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOb,GAAG,CAACC,MAAM,CAAC,OAAO,EAAE;MACzBY,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFhB,MAAM,CAACC,GAAG,CAAC,SAAS,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAClCA,GAAG,CAACc,WAAW,CAAC,OAAO,CAAC,CAACL,QAAQ,CAAC,GAAG,CAAC;AACxC,CAAC,CAAC;AAEF,eAAeZ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nconst formatter = (_ref, dataset) => {\n  let {\n    series,\n    seriesOrder\n  } = _ref;\n  const completeSeries = Object.fromEntries(Object.entries(series).map(_ref2 => {\n    var _seriesData$data, _dataset$map, _seriesData$valueForm;\n    let [seriesId, seriesData] = _ref2;\n    const datasetKeys = seriesData === null || seriesData === void 0 ? void 0 : seriesData.datasetKeys;\n    const missingKeys = ['x', 'y', 'id'].filter(key => typeof (datasetKeys === null || datasetKeys === void 0 ? void 0 : datasetKeys[key]) !== 'string');\n    if (seriesData !== null && seriesData !== void 0 && seriesData.datasetKeys && missingKeys.length > 0) {\n      throw new Error([\"MUI X: scatter series with id='\".concat(seriesId, \"' has incomplete datasetKeys.\"), \"Properties \".concat(missingKeys.map(key => \"\\\"\".concat(key, \"\\\"\")).join(', '), \" are missing.\")].join('\\n'));\n    }\n    const data = !datasetKeys ? (_seriesData$data = seriesData.data) !== null && _seriesData$data !== void 0 ? _seriesData$data : [] : (_dataset$map = dataset === null || dataset === void 0 ? void 0 : dataset.map(d => {\n      var _d$datasetKeys$x, _d$datasetKeys$y;\n      return {\n        x: (_d$datasetKeys$x = d[datasetKeys.x]) !== null && _d$datasetKeys$x !== void 0 ? _d$datasetKeys$x : null,\n        y: (_d$datasetKeys$y = d[datasetKeys.y]) !== null && _d$datasetKeys$y !== void 0 ? _d$datasetKeys$y : null,\n        z: datasetKeys.z && d[datasetKeys.z],\n        id: d[datasetKeys.id]\n      };\n    })) !== null && _dataset$map !== void 0 ? _dataset$map : [];\n    return [seriesId, _extends({}, seriesData, {\n      data,\n      valueFormatter: (_seriesData$valueForm = seriesData.valueFormatter) !== null && _seriesData$valueForm !== void 0 ? _seriesData$valueForm : v => \"(\".concat(v.x, \", \").concat(v.y, \")\")\n    })];\n  }));\n  return {\n    series: completeSeries,\n    seriesOrder\n  };\n};\nexport default formatter;","map":{"version":3,"names":["_extends","formatter","_ref","dataset","series","seriesOrder","completeSeries","Object","fromEntries","entries","map","_ref2","_seriesData$data","_dataset$map","_seriesData$valueForm","seriesId","seriesData","datasetKeys","missingKeys","filter","key","length","Error","concat","join","data","d","_d$datasetKeys$x","_d$datasetKeys$y","x","y","z","id","valueFormatter","v"],"sources":["C:/narendra/Reactjs/Frontend/node_modules/@mui/x-charts/ScatterChart/formatter.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nconst formatter = ({\n  series,\n  seriesOrder\n}, dataset) => {\n  const completeSeries = Object.fromEntries(Object.entries(series).map(([seriesId, seriesData]) => {\n    const datasetKeys = seriesData?.datasetKeys;\n    const missingKeys = ['x', 'y', 'id'].filter(key => typeof datasetKeys?.[key] !== 'string');\n    if (seriesData?.datasetKeys && missingKeys.length > 0) {\n      throw new Error([`MUI X: scatter series with id='${seriesId}' has incomplete datasetKeys.`, `Properties ${missingKeys.map(key => `\"${key}\"`).join(', ')} are missing.`].join('\\n'));\n    }\n    const data = !datasetKeys ? seriesData.data ?? [] : dataset?.map(d => {\n      return {\n        x: d[datasetKeys.x] ?? null,\n        y: d[datasetKeys.y] ?? null,\n        z: datasetKeys.z && d[datasetKeys.z],\n        id: d[datasetKeys.id]\n      };\n    }) ?? [];\n    return [seriesId, _extends({}, seriesData, {\n      data,\n      valueFormatter: seriesData.valueFormatter ?? (v => `(${v.x}, ${v.y})`)\n    })];\n  }));\n  return {\n    series: completeSeries,\n    seriesOrder\n  };\n};\nexport default formatter;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,MAAMC,SAAS,GAAGA,CAAAC,IAAA,EAGfC,OAAO,KAAK;EAAA,IAHI;IACjBC,MAAM;IACNC;EACF,CAAC,GAAAH,IAAA;EACC,MAAMI,cAAc,GAAGC,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACL,MAAM,CAAC,CAACM,GAAG,CAACC,KAAA,IAA4B;IAAA,IAAAC,gBAAA,EAAAC,YAAA,EAAAC,qBAAA;IAAA,IAA3B,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAAL,KAAA;IAC1F,MAAMM,WAAW,GAAGD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEC,WAAW;IAC3C,MAAMC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAACC,MAAM,CAACC,GAAG,IAAI,QAAOH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAGG,GAAG,CAAC,MAAK,QAAQ,CAAC;IAC1F,IAAIJ,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEC,WAAW,IAAIC,WAAW,CAACG,MAAM,GAAG,CAAC,EAAE;MACrD,MAAM,IAAIC,KAAK,CAAC,mCAAAC,MAAA,CAAmCR,QAAQ,kDAAAQ,MAAA,CAA+CL,WAAW,CAACR,GAAG,CAACU,GAAG,SAAAG,MAAA,CAAQH,GAAG,OAAG,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC,mBAAgB,CAACA,IAAI,CAAC,IAAI,CAAC,CAAC;IACrL;IACA,MAAMC,IAAI,GAAG,CAACR,WAAW,IAAAL,gBAAA,GAAGI,UAAU,CAACS,IAAI,cAAAb,gBAAA,cAAAA,gBAAA,GAAI,EAAE,IAAAC,YAAA,GAAGV,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,GAAG,CAACgB,CAAC,IAAI;MAAA,IAAAC,gBAAA,EAAAC,gBAAA;MACpE,OAAO;QACLC,CAAC,GAAAF,gBAAA,GAAED,CAAC,CAACT,WAAW,CAACY,CAAC,CAAC,cAAAF,gBAAA,cAAAA,gBAAA,GAAI,IAAI;QAC3BG,CAAC,GAAAF,gBAAA,GAAEF,CAAC,CAACT,WAAW,CAACa,CAAC,CAAC,cAAAF,gBAAA,cAAAA,gBAAA,GAAI,IAAI;QAC3BG,CAAC,EAAEd,WAAW,CAACc,CAAC,IAAIL,CAAC,CAACT,WAAW,CAACc,CAAC,CAAC;QACpCC,EAAE,EAAEN,CAAC,CAACT,WAAW,CAACe,EAAE;MACtB,CAAC;IACH,CAAC,CAAC,cAAAnB,YAAA,cAAAA,YAAA,GAAI,EAAE;IACR,OAAO,CAACE,QAAQ,EAAEf,QAAQ,CAAC,CAAC,CAAC,EAAEgB,UAAU,EAAE;MACzCS,IAAI;MACJQ,cAAc,GAAAnB,qBAAA,GAAEE,UAAU,CAACiB,cAAc,cAAAnB,qBAAA,cAAAA,qBAAA,GAAKoB,CAAC,QAAAX,MAAA,CAAQW,CAAC,CAACL,CAAC,QAAAN,MAAA,CAAKW,CAAC,CAACJ,CAAC;IACpE,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;EACH,OAAO;IACL1B,MAAM,EAAEE,cAAc;IACtBD;EACF,CAAC;AACH,CAAC;AACD,eAAeJ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}